apply plugin: 'com.android.application'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.github.triplet.play'
apply plugin: 'io.fabric'

def signingFile = file('props/release.signing')
buildProperties {
    signing.file signingFile.exists() ? signingFile : file('props/debug.signing')
    secrets.file file('props/secrets.properties')
}

def secrets = buildProperties.secrets
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.tasomaniac.openwith"
        minSdkVersion 15
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""

        resConfigs "ar", "de", "en", "es", "in", "it", "ja", "pl", "pt-rBR", "pt-rPT", "ru", "tr", "uk", "zh-rCN"
    }

    signingConfigs {
        debug.storeFile file("props/debug.keystore")
        release.signingConfigProperties buildProperties.signing
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            versionNameSuffix "-debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        floss {
            applicationIdSuffix ".floss"
            versionName rootProject.ext.versionName + "-floss"
        }
        play {}
    }

    lintOptions {
        textReport true
        textOutput 'stdout'

        fatal 'UnusedResources'
        warning 'InvalidPackage'
    }
}

play {
    serviceAccountEmail = secrets['play_service_account'].or('').string
    pk12File = file(secrets['play_key_file'].or('no_file.p12').string)
    track = 'beta'
}

dependencies {
    def supportLibVersion = "25.1.0"
    def schematicVersion = '0.7.0'
    def butterKnifeVersion = '8.4.0'

    compile "com.android.support:support-v4:$supportLibVersion"
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:preference-v14:$supportLibVersion"

    compile 'com.tasomaniac:delayed-progress:0.4'

    compile 'jp.wasabeef:recyclerview-animators:2.2.5'

    compile "net.simonvt.schematic:schematic:$schematicVersion"
    annotationProcessor "net.simonvt.schematic:schematic-compiler:$schematicVersion"

    compile 'com.google.dagger:dagger:2.8'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.8'

    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    compile 'com.jakewharton.timber:timber:4.5.1'

    compile 'com.squareup.okhttp3:okhttp:3.5.0'

    playCompile 'com.crashlytics.sdk.android:crashlytics:2.6.6'

    testCompile 'junit:junit:4.12'
}
