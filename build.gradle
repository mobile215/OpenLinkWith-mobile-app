buildscript {
    ext.ci = 'true' == System.getenv('CI')
    ext.isPlay = project.hasProperty('play')
    ext.configFile = { fileName ->
        rootProject.file("gradle/$fileName")
    }

    def versionMajor = 2
    def versionMinor = 8
    def versionBuild = 0
    ext.playPublishTrack = 'internal'

    ext.versions = [
            compileSdk : 28,
            minSdk     : 22,
            versionCode: versionMajor * 10000 + versionMinor * 100 + versionBuild,
            versionName: "${versionMajor}.${versionMinor}",

            dagger     : '2.27',
            lifecycle  : '2.2.0',
            kotlin     : '1.3.72',
            ktlint     : '0.36.0',
            okHttp     : '4.6.0',
            room       : '2.2.5',
    ]

    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.28.0'
        classpath 'com.novoda:gradle-android-command-plugin:2.1.0'
        classpath 'com.novoda:gradle-build-properties-plugin:0.4.1'
        classpath 'io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.9.1'
        classpath 'org.jlleitschuh.gradle:ktlint-gradle:9.2.1'
        classpath 'com.novoda:gradle-static-analysis-plugin:1.2'
        classpath 'com.gradleup:auto-manifest-plugin:1.0.1'
        if (isPlay) {
            classpath 'com.google.gms:google-services:4.3.3'
            classpath 'com.google.firebase:firebase-crashlytics-gradle:2.1.0'
            classpath 'com.github.triplet.gradle:play-publisher:2.7.5'
        }
    }
}
apply plugin: 'com.gradleup.auto.manifest'

autoManifest {
    packageName = 'com.tasomaniac.openwith'
    replaceDashesWithDot = true
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }

    if (project.name != 'test-support') {
        apply from: configFile('static-analysis.gradle')
    }
}

apply from: configFile('configure-not-wanted-repositories.gradle')
apply from: configFile('configure-dependency-resolution.gradle')
apply from: configFile('configure-dependency-updates.gradle')
