apply plugin: 'com.android.application'
apply from: configFile('android-common-config.gradle')
apply plugin: 'com.novoda.android-command'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'com.novoda.static-analysis'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

buildProperties {
  signing.using(configFile('release.signing')) | configFile('debug.signing')
  secrets.using(configFile('secrets.properties'))
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

android {
  defaultConfig {
    applicationId 'com.tasomaniac.openwith'
    versionCode versions.versionCode
    versionName versions.versionName
    buildConfigString 'GIT_SHA', gitSha

    resConfigs 'ar', 'de', 'en', 'es', 'fr', 'hr', 'in', 'it', 'iw-rIL', 'ja', 'pl', 'pt-rBR', 'pt-rPT', 'ru', 'sv', 'tr', 'uk', 'vi', 'zh-rCN', 'zh-rTW'
  }

  signingConfigs {
    debug.storeFile configFile('debug.keystore')
    release {
      def signing = buildProperties.signing
      storeFile configFile(signing['storeFile'].string)
      storePassword signing['storePassword'].string
      keyAlias signing['keyAlias'].string
      keyPassword signing['keyPassword'].string
    }
  }

  buildTypes {
    debug {
      ext.enableCrashlytics = false
      applicationIdSuffix '.debug'
      versionNameSuffix '-debug'
      signingConfig signingConfigs.debug
    }

    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }

  flavorDimensions 'store'
  productFlavors {
    floss {
      applicationIdSuffix '.floss'
      versionNameSuffix '-floss'
    }
    play {}
  }
}

staticAnalysis {
  penalty {
    maxWarnings = 10
    maxErrors = 0
  }

  detekt {
    config = files(configFile('detekt.yml'))
  }

  ktlint {
    reporters = [ReporterType.CHECKSTYLE]

    includeVariants { it.name == 'flossDebug' }
  }

  lintOptions {
    textReport true
    textOutput 'stdout'

    checkAllWarnings true
    checkReleaseBuilds false

    if (System.env.TRAVIS_BRANCH != 'master') ignore 'MissingTranslation'

    lintConfig configFile('lint.xml')

    includeVariants { it.name == 'flossDebug' }
  }
}

kapt {
  arguments {
    arg('dagger.gradle.incremental')
    arg('dagger.formatGeneratedSource', 'disabled')
//    arg('dagger.fastInit', 'enabled')
  }
}

if (isPlay) {
  apply from: configFile('fabric.gradle')
  apply from: configFile('play-publish.gradle')
}

configurations {
  implementation.exclude module: 'support-v4'
  compile.exclude module: 'support-v4'
}

dependencies {
  implementation project(':base')
  
  implementation 'androidx.preference:preference-ktx:1.0.0'
  implementation 'androidx.viewpager2:viewpager2:1.0.0-alpha01'

  implementation 'com.tasomaniac:delayed-progress:0.4'

  kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

  implementation "androidx.room:room-runtime:$versions.room"
  implementation "androidx.room:room-rxjava2:$versions.room"
  kapt "androidx.room:room-compiler:$versions.room"

  implementation "com.squareup.okhttp3:okhttp:$versions.okHttp"

  testImplementation project(':test-support')

  testImplementation 'org.assertj:assertj-core:3.12.1'
  testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okHttp"
}
